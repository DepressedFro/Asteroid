{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","asteroid.js","laser.js","ship.js","game.js","index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Asteroid","vertices","x","y","factor","angle","velocity","this","slice","size","splitTimes","Math","cos","sin","rotate","bind","scale","update","render","theta","ctx","save","strokeStyle","beginPath","moveTo","lineTo","stroke","restore","Laser","remove","getRemove","lastx","lasty","closePath","Ship","PI","thruster","thrusting","warp","shoot","thrust","random","Game","message","shapes","Asteroids","Sizes","Numbers","Letters","keyArray","keys","ship","lasers","time","lastTime","lastTimeWarped","lastTimePaused","damageTime","onetime","maxWidth","maxHeight","currentLevel","currentLives","currentLivesVisual","score","flip","sfx_player_laser_shoot","Audio","preload","load","sfx_player_warp","sfx_next_level","sfx_player_explode","sfx_player_laser_hit","sfx_game_end","handleKeyDown","handleKeyUp","window","onkeydown","onkeyup","backBufferCanvas","document","createElement","width","height","backBufferContext","getContext","screenBufferCanvas","body","appendChild","screenBufferContext","id","textContent","gameOver","pointCollision","loop","level","makeLevel","drawText","drawMenu","getElementById","innerHTML","interval","setInterval","event","preventDefault","keyCode","checkObjectShape","checkObjectX","checkObjectY","intersection","j","pointX1","pointX2","pointY1","pointY2","abs","canBeDamaged","cloneNode","play","push","splice","asteroids","coll","a","b","l","xPad","yPad","k","n","round","temp","fillStyle","fillRect","spotx","drawImage","text","drawX","drawY","toString","toUpperCase","numberBeginning","charCodeAt","letterBeginning","spaceBeginning","space","char","flipper","initX","initY","speed"],"mappings":"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","file":"static/js/main.efaadea1.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default class Asteroid\r\n{\r\n  constructor(vertices, x, y, factor, angle, velocity)\r\n  {\r\n    //copy sent vertices\r\n    this.vertices = vertices.slice(0);\r\n    //initial x/y position\r\n    this.x = x;\r\n    this.y = y;\r\n    this.size = factor;\r\n    this.angle = angle\r\n    this.splitTimes = 0;\r\n    this.velocity = {\r\n      x: velocity*Math.cos(this.angle),\r\n      y: velocity*Math.sin(this.angle)\r\n    };\r\n    this.length = this.vertices.length;\r\n\r\n    this.rotate = this.rotate.bind(this);\r\n    this.scale = this.scale.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.render = this.render.bind(this);\r\n    //create it with a random size\r\n    this.scale(factor);\r\n  }\r\n\r\n//rotates by the given angle\r\n  rotate(theta)\r\n  {\r\n      var sin = Math.sin(theta);\r\n      var cos = Math.cos(theta);\r\n\r\n      for (var i = 0; i < this.length; i+=2)\r\n      {\r\n        var x = this.vertices[i];\r\n        var y = this.vertices[i+1];\r\n\r\n        this.vertices[i] = (cos*x - sin*y) ;\r\n        this.vertices[i+1] = (sin*x + cos*y);\r\n      }\r\n  }\r\n\r\n  //scales all vertices by the given factor\r\n  scale(factor)\r\n  {\r\n    for(var i = 0; i < this.length; i++)\r\n    {\r\n      this.vertices[i] *= factor;\r\n    }\r\n  }\r\n\r\n  update()\r\n  {\r\n    this.rotate(.01);\r\n\r\n    if(this.velocity.x < -4)\r\n    {\r\n      this.velocity.x = -4;\r\n    }\r\n    else if(this.velocity.x > 4)\r\n    {\r\n      this.velocity.x = 4;\r\n    }\r\n    if(this.velocity.y < -4)\r\n    {\r\n      this.velocity.y = -4;\r\n    }\r\n    else if(this.velocity.y > 4)\r\n    {\r\n      this.velocity.y = 4;\r\n    }\r\n\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n    //OOB check\r\n    if(this.x > 1000)\r\n    {\r\n      this.x = 0;\r\n    }\r\n    else if(this.x < 0)\r\n    {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y > 1000)\r\n    {\r\n      this.y = 0;\r\n    }\r\n    if(this.y < 0)\r\n    {\r\n      this.y = 1000;\r\n    }\r\n  }\r\n\r\n  render(ctx)\r\n  {\r\n    ctx.save();\r\n    ctx.strokeStyle = \"#fff\";\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.vertices[0] + this.x, this.vertices[1] + this.y);\r\n    for(var i = 2; i < this.length; i += 2)\r\n    {\r\n      ctx.lineTo(this.vertices[i] + this.x, this.vertices[i + 1] + this.y);\r\n    }\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n}\r\n","//lasers that the ship shoots\r\n\r\nexport default class Laser\r\n{\r\n  constructor(x, y, angle)\r\n  {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.remove = false;\r\n\r\n    var velocity = 5;\r\n    this.velocity = {\r\n      x: velocity*Math.cos(angle),\r\n      y: velocity*Math.sin(angle)\r\n    };\r\n\r\n    this.getRemove = this.getRemove.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.render = this.render.bind(this);\r\n  }\r\n\r\n  getRemove()\r\n  {\r\n    return this.remove;\r\n  }\r\n\r\n  update()\r\n  {\r\n    this.lastx = this.x;\r\n    this.lasty = this.y;\r\n\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n    //set the laser to be destroyed if it goes OOB\r\n    if(this.x > 1000)\r\n    {\r\n      this.remove = true;\r\n    }\r\n    else if(this.x < 0)\r\n    {\r\n      this.remove = true;\r\n    }\r\n    if(this.y > 1000)\r\n    {\r\n      this.remove = true;\r\n    }\r\n    if(this.y < 0)\r\n    {\r\n      this.remove = true;\r\n    }\r\n  }\r\n\r\n  render(ctx)\r\n  {\r\n    ctx.save();\r\n    ctx.strokeStyle = \"#fff\";\r\n    ctx.beginPath()\r\n    ctx.moveTo(this.lastx, this.lasty);\r\n    ctx.lineTo(this.x, this.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n    ctx.restore();\r\n  }\r\n}\r\n","import Laser from './laser';\r\n\r\nexport default class Ship\r\n{\r\n  constructor()\r\n  {\r\n    this.x = 500;\r\n    this.y = 500;\r\n    var velocity = 0;\r\n    //sets the angle to be parallel\r\n    this.angle = 3*Math.PI/2;\r\n    //0, -2 is the middle of the front of the ship\r\n    this.vertices = [0,0,-2,1,-1,-3,0,-2,1,-3,2,1,0,0];\r\n    this.thruster = [0,0,-1,1,-1,2,0,3,1,2,1,1,0,0];\r\n    this.thrusting = false;\r\n    this.length = this.vertices.length;\r\n    this.velocity = {\r\n      x: velocity*Math.cos(this.angle),\r\n      y: velocity*Math.sin(this.angle)\r\n    };\r\n    this.scale = this.scale.bind(this);\r\n    this.warp = this.warp.bind(this);\r\n    this.shoot = this.shoot.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n    this.thrust = this.thrust.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.scale(4);\r\n  }\r\n\r\n  //scales all vertices by the given factor\r\n  scale(factor)\r\n  {\r\n    for(var i = 0; i < this.length; i++)\r\n    {\r\n      this.vertices[i] *= factor;\r\n    }\r\n    for(var i = 0; i < this.thruster.length; i++)\r\n    {\r\n      this.thruster[i] *= factor;\r\n    }\r\n  }\r\n\r\n  warp()\r\n  {\r\n    this.x = Math.random() * 1000 + 100;\r\n    this.y = Math.random() * 1000 + 100;\r\n  }\r\n  //rotates by the given angle\r\n  rotate(theta)\r\n  {\r\n      var sin = Math.sin(theta);\r\n      var cos = Math.cos(theta);\r\n      this.angle += theta;\r\n\r\n      for (var i = 0; i < this.length; i+=2)\r\n      {\r\n        var x = this.vertices[i];\r\n        var y = this.vertices[i+1];\r\n\r\n        this.vertices[i] = (cos*x - sin*y) ;\r\n        this.vertices[i+1] = (sin*x + cos*y);\r\n      }\r\n      for (var i = 0; i < this.thruster.length; i+=2)\r\n      {\r\n        var x = this.thruster[i];\r\n        var y = this.thruster[i+1];\r\n\r\n        this.thruster[i] = (cos*x - sin*y) ;\r\n        this.thruster[i+1] = (sin*x + cos*y);\r\n      }\r\n  }\r\n\r\n  thrust()\r\n  {\r\n    this.thrusting = true;\r\n    if(this.velocity.x *this.velocity.x + this.velocity.y * this.velocity.y < 20*20)\r\n    {\r\n      this.velocity.x += 0.06*Math.cos(this.angle);\r\n      this.velocity.y += 0.06*Math.sin(this.angle);\r\n    }\r\n  }\r\n\r\n  shoot()\r\n  {\r\n    var laser = new Laser(this.vertices[6] + this.x, this.vertices[7] + this.y, this.angle);\r\n    return laser;\r\n  }\r\n\r\n  update()\r\n  {\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n    if(this.x > 1000)\r\n    {\r\n      this.x = 0;\r\n    }\r\n    else if(this.x < 0)\r\n    {\r\n      this.x = 1000;\r\n    }\r\n    if(this.y > 1000)\r\n    {\r\n      this.y = 0;\r\n    }\r\n    if(this.y < 0)\r\n    {\r\n      this.y = 1000;\r\n    }\r\n\r\n  }\r\n\r\n  render(ctx)\r\n  {\r\n    ctx.save();\r\n\r\n    //for drawing the ship\r\n    ctx.strokeStyle = \"#fff\";\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.vertices[0] + this.x, this.vertices[1] + this.y);\r\n    for(var i = 2; i < this.length; i += 2)\r\n    {\r\n      ctx.lineTo(this.vertices[i] + this.x, this.vertices[i + 1] + this.y);\r\n    }\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n\r\n    //for drawing the engine fire\r\n    if(this.thrusting === true)\r\n    {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.thruster[0] + this.x, this.thruster[1] + this.y);\r\n      for(var i = 2; i < this.thruster.length; i += 2)\r\n      {\r\n        ctx.lineTo(this.thruster[i] + this.x, this.thruster[i + 1] + this.y);\r\n      }\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      this.thrusting = false;\r\n    }\r\n\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","//game logic\r\nimport Asteroid from './asteroid';\r\nimport Ship from './ship';\r\nimport Laster from './laser';\r\nexport default class Game\r\n{\r\n  constructor()\r\n  {\r\n    var state = {current: \"start\"};\r\n    this.shapes = {Asteroids: [\r\n      [-3,-2,1,-4,4,-3,5,0,4,2,-1,4,-3,2,-3,-2],\r\n      [-4,-1,-5,2,-3,4,-1,2,2,4,3,2,5,0,3,-2,2,-5,-1,-4,-4,-4,-4,-1],\r\n      [-3,-3,2,-4,3,0,2,4,-3,5,-4,2,-2,0,-4,-2,-3,-3],\r\n      [-4,-2,-2,-4,0,-4,3,-2,3,0,2,3,-1,3,-4,2,-5,-1,-4,-2],\r\n      [-3,1,-6,-2,-3,-5,1,-4,0,-2,3,-4,5,-2,3,3,1,2,-3,1],\r\n      [-3,-4,-1,-6,3,-5,2,-4,4,-4,5,-3,5,1,1,3,0,2,-3,2,-3,0,-5,-2,-3,-4]\r\n    ],\r\n    Sizes:\r\n    [[1],\r\n    [4],\r\n    [2],\r\n    [5],\r\n    [3],\r\n    [5]],\r\n    Numbers:\r\n    [\r\n      [-1,-2,1,-2,1,2,-1,2,-1,-2], //0\r\n      [-1,-1,0,-2,0,2,-1,2,1,2],\r\n      [-1,-2,1,-2,1,0,-1,0,-1,2,1,2],\r\n      [-1,-2,1,-2,1,0,-1,0,1,0,1,2,-1,2],\r\n      [-1,-2,-1,0,1,0,1,-2,1,2],\r\n      [1,-2,-1,-2,-1,0,1,0,1,2,-1,2],\r\n      [-1,-2,-1,0,1,0,1,2,-1,2,-1,0],\r\n      [-1,-2,1,-2,-1,2],\r\n      [-1,-2,-1,0,1,0,1,2,-1,2,-1,0,1,0,1,-2,-1,-2],\r\n      [1,0,-1,0,-1,-2,1,-2,1,2] //9\r\n    ],\r\n    Letters:\r\n    [\r\n      [-1,2,-1,-2,1,-2,1,0,-1,0,1,0,1,2], //A\r\n      [-1,2,-1,-2,1,-2,1,-1,0,0,-1,0,0,0,1,1,1,2,-1,2],\r\n      [1,-2,-1,-2,-1,2,1,2],\r\n      [-1,2,-1,-2,0,-2,1,-1,1,1,0,2,-1,2],\r\n      [1,-2,-1,-2,-1,0,1,0,-1,0,-1,2,1,2],\r\n      [-1,2,-1,-2,1,-2,-1,-2,-1,0,0,0],\r\n      [1,-2,-1,-2,-1,0,1,0,1,2,-1,2,-1,0],\r\n      [-1,-2,-1,2,-1,0,1,0,1,-2,1,2], //H\r\n      [-1,-2,1,-2,0,-2,0,2,-1,2,1,2],\r\n      [-1,-2,1,-2,0,-2,0,0,0,1,0,2,-1,1],\r\n      [-1,-2,-1,2,-1,0,1,-2,-1,0,1,2], //k\r\n      [-1,-2,-1,2,1,2],\r\n      [-1,2,-1,-2,0,0,1,-2,1,2], //m\r\n      [-1,2,-1,-2,0,0,1,-2,1,2],\r\n      [1,-2,-1,-2,-1,2,1,2,1,-2], //o\r\n      [-1,2,-1,-2,1,-2,1,0,-1,0],\r\n      [1,-2,-1,-2,-1,2,0,1,1,2,0,1,1,1,1,-2],\r\n      [-1,2,-1,-2,1,-2,1,0,-1,0,1,2],\r\n      [1,-2,-1,-2,-1,0,1,0,1,2,-1,2],\r\n      [-1,-2,1,-2,0,-2,0,2],\r\n      [-1,-2,-1,2,1,2,1,-2],\r\n      [-1,-2,0,2,1,-2],//v\r\n      [-1,-2,-1,2,0,2,0,-2,0,2,1,2,1,-2],\r\n      [1,-2,-1,2,0,0,-1,-2,1,2],\r\n      [-1,-2,0,0,1,-2,0,0,0,2],\r\n      [-1,-2,1,-2,-1,2,1,2] // z\r\n    ]\r\n    };\r\n\r\n    //stores numbers that correlate to keys on keyboard\r\n    this.keyArray = [16, 27, 32, 37, 38, 39];\r\n    //processing queue for inputted keys\r\n    this.keys = [];\r\n    this.ship = new Ship();\r\n    this.lasers = [];\r\n    //keeps track of how much time has passed\r\n    this.time = 0;\r\n    this.lastTime = 0;\r\n    this.lastTimeWarped = 0;\r\n    this.lastTimePaused = 0;\r\n    this.damageTime = 0;\r\n    this.onetime = 0;\r\n    //canvas boundaries\r\n    this.maxWidth = 1000;\r\n    this.maxHeight = 1000;\r\n    //initial game conditions\r\n    this.currentLevel = 1;\r\n    this.currentLives = 3;\r\n    this.currentLivesVisual = [0,0,-8,4,-4,-12,0,-8,4,-12,8,4,0,0];\r\n    this.score = 0;\r\n    this.flip = false;\r\n\r\n\r\n    //Sounds\r\n    this.sfx_player_laser_shoot = new Audio(\"Sounds/Laser_Shoot.wav\")\r\n    this.sfx_player_laser_shoot.preload = \"auto\";\r\n    this.sfx_player_laser_shoot.load();\r\n\r\n    this.sfx_player_warp = new Audio(\"Sounds/Warp.wav\")\r\n    this.sfx_player_warp.preload = \"auto\";\r\n    this.sfx_player_warp.load();\r\n\r\n    this.sfx_next_level = new Audio(\"Sounds/Next_Level.wav\")\r\n    this.sfx_next_level.preload = \"auto\";\r\n    this.sfx_next_level.load();\r\n\r\n    this.sfx_player_explode = new Audio(\"Sounds/Ship_Explode.wav\")\r\n    this.sfx_player_explode.preload = \"auto\";\r\n    this.sfx_player_explode.load();\r\n\r\n    this.sfx_player_laser_hit = new Audio(\"Sounds/Laser_Hit.wav\")\r\n    this.sfx_player_laser_hit.preload = \"auto\";\r\n    this.sfx_player_laser_hit.load();\r\n\r\n    this.sfx_game_end = new Audio(\"Sounds/End_Game.wav\")\r\n    this.sfx_game_end.preload = \"auto\";\r\n    this.sfx_game_end.load();\r\n\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    window.onkeydown = this.handleKeyDown;\r\n    window.onkeyup = this.handleKeyUp;\r\n    // Create the back buffer canvas\r\n    this.backBufferCanvas = document.createElement('canvas');\r\n    this.backBufferCanvas.width = this.maxWidth;\r\n    this.backBufferCanvas.height = this.maxHeight;\r\n    this.backBufferContext = this.backBufferCanvas.getContext('2d');\r\n    // Create the screen buffer canvas\r\n    this.screenBufferCanvas = document.createElement('canvas');\r\n    this.screenBufferCanvas.width = this.maxWidth;\r\n    this.screenBufferCanvas.height = this.maxHeight;\r\n    document.body.appendChild(this.screenBufferCanvas);\r\n    this.screenBufferContext = this.screenBufferCanvas.getContext('2d');\r\n    // Create HTML UI Elements\r\n    var message = document.createElement('div');\r\n    message.id = \"message\";\r\n    message.textContent = \"\";\r\n    document.body.appendChild(message);\r\n    //binding functions\r\n    this.update = this.update.bind(this);\r\n    this.gameOver = this.gameOver.bind(this);\r\n    this.pointCollision = this.pointCollision.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.loop = this.loop.bind(this);\r\n    this.level = this.makeLevel.bind(this);\r\n    this.drawText = this.drawText.bind(this);\r\n    this.drawMenu = this.drawMenu.bind(this);\r\n\r\n    //create the first level\r\n    this.level(this.currentLevel);\r\n    //game instructions/controls\r\n    var message = document.getElementById(\"message\");\r\n    message.innerHTML = \"HOW TO PLAY: <br /> -SHOOT ASTEROIDS TO INCREASE SCORE <br /> -DESTROY ALL ASTEROIDS TO GO TO THE NEXT LEVEL <br /> -WARPING TAKES YOU TO A COMPLETELY RANDOM LOCATION ON SCREEN <br /> -IF YOU DIE, YOU HAVE 3 SECONDS BEFORE YOU CAN BE DAMAGED AGAIN <br /> <br />CONTROLS: <br />-ESC: HIDE HELP <br />-LEFT ARROW KEY: ROTATE COUNTER CLOCKWISE <br />-UP ARROW KEY: MOVE FORWARD <br />-RIGHT ARROW KEY: ROTATE CLOCKWISE <br />-SPACE: FIRE LASER <br />-WARP: ACTIVATE WARP\";    this.interval = setInterval(this.loop, 1000/60);\r\n  }\r\n\r\n\r\n  handleKeyUp(event)\r\n  {\r\n    //handles key up events\r\n    event.preventDefault();\r\n    if(event.keyCode === 16 || event.keyCode === 27 || event.keyCode === 32 || event.keyCode === 37 || event.keyCode === 38 || event.keyCode === 39)\r\n    {\r\n      this.keys[event.keyCode] = false;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleKeyDown(event)\r\n  {\r\n    //make an array to keep track of th keys and then use a for loop to go through each input\r\n    event.preventDefault();\r\n    if(event.keyCode === 16 || event.keyCode === 27 || event.keyCode === 32 || event.keyCode === 37 || event.keyCode === 38 || event.keyCode === 39)\r\n    {\r\n      this.keys[event.keyCode] = true;\r\n    }\r\n  }\r\n\r\n  //algorithm based on https://wrf.ecse.rpi.edu//Research/Short_Notes/pnpoly.html\r\n  pointCollision(checkObjectShape, checkObjectX, checkObjectY, x, y)\r\n  {\r\n    var intersection = false;\r\n    var j = checkObjectShape.length - 2;\r\n    for(var i = 0; i < checkObjectShape.length; i+=2)\r\n    {\r\n      //for a vertex\r\n      var pointX1 = checkObjectShape[i] + checkObjectX;\r\n      var pointX2 = checkObjectShape[j] + checkObjectX;\r\n      var pointY1 = checkObjectShape[i+1] + checkObjectY;\r\n      var pointY2 = checkObjectShape[j+1] + checkObjectY;\r\n\r\n      if (( pointY1 > y != pointY2 >y ) && (x < (pointX2 - pointX1) * (y - pointY1) / (pointY2 - pointY1) + pointX1) )\r\n      {\r\n        intersection = !intersection;\r\n      }\r\n      j = i;\r\n    }\r\n    return intersection;\r\n  }\r\n\r\n  update()\r\n  {\r\n    if(this.currentLives <= 0)\r\n    {\r\n      this.gameOver();\r\n      return;\r\n    }\r\n    //keeps track of time\r\n    this.time += 1;\r\n\r\n    //checks if the player's ship can be damaged\r\n    if(Math.abs(this.time - this.damageTime)  >= 180)\r\n    {\r\n      this.canBeDamaged = true;\r\n    }\r\n\r\n    /* Loop through the pressed down keys and due stuff\r\n    16 = shift\r\n    27 = esc\r\n    32 = space\r\n    37 = left\r\n    38 = up\r\n    39 = right\r\n    */\r\n    for(var i = 0; i < this.keyArray.length; i++)\r\n    {\r\n      if(this.keyArray[i] === 16 && this.keys[this.keyArray[i]] )\r\n      {\r\n        //shift key, warp\r\n        if( Math.abs(this.time - this.lastTimeWarped)  >= 200)\r\n        {\r\n          this.lastTimeWarped = this.time;\r\n          this.ship.warp();\r\n          var sound = this.sfx_player_warp.cloneNode();\r\n          sound.play();\r\n        }\r\n\r\n      }\r\n      else if(this.keyArray[i] === 27 && this.keys[this.keyArray[i]] )\r\n      {\r\n        //escape key\r\n        if( Math.abs(this.time - this.lastTimePaused)  >= 20)\r\n        {\r\n          this.lastTimePaused = this.time;\r\n          this.drawMenu();\r\n        }\r\n      }\r\n      else if(this.keyArray[i] === 32 && this.keys[this.keyArray[i]] )\r\n      {\r\n        //space key\r\n        //restrict the amount of bullets a player can fire to 3 times a second\r\n        if( Math.abs(this.time - this.lastTime)  >= 20)\r\n        {\r\n          this.lastTime = this.time;\r\n          this.lasers.push(this.ship.shoot());\r\n          var sound = this.sfx_player_laser_shoot.cloneNode();\r\n          sound.play();\r\n        }\r\n\r\n      }\r\n      else if(this.keyArray[i] === 37 && this.keys[this.keyArray[i]] )\r\n      {\r\n        //left key, rotate counter clockwise\r\n        this.ship.rotate(-0.05);\r\n      }\r\n      else if(this.keyArray[i] === 38 && this.keys[this.keyArray[i]] )\r\n      {\r\n        //up key, move forward\r\n        this.ship.thrust();\r\n      }\r\n      else if(this.keyArray[i] === 39 && this.keys[this.keyArray[i]] )\r\n      {\r\n        //right key, rotate clockwise\r\n        this.ship.rotate(0.05);\r\n      }\r\n    }\r\n\r\n    //update the ship position\r\n    this.ship.update();\r\n\r\n    //loop through all lasers and destroy them if they go off screen\r\n    for(var i = 0; i < this.lasers.length; i++)\r\n    {\r\n\r\n      this.lasers[i].update();\r\n      if(this.lasers[i].getRemove())\r\n      {\r\n        this.lasers.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    //loop through all asteroids and update them\r\n    for(var i = 0; i < this.asteroids.length; i++)\r\n    {\r\n\r\n      var coll = false;\r\n      //check for collisions between asteroids\r\n      for(var a = 0; a < this.asteroids.length; a++)\r\n      {\r\n        //skip asteroid if it's the same\r\n        if(a === i)\r\n        {\r\n          continue;\r\n        }\r\n        for(var b = 0; b < this.asteroids[a].vertices.length; b+=2)\r\n        {\r\n\r\n          if(this.pointCollision(this.asteroids[i].vertices, this.asteroids[i].x, this.asteroids[i].y, this.asteroids[a].vertices[b] + this.asteroids[a].x, this.asteroids[a].vertices[b+1] + this.asteroids[a].y) )\r\n          {\r\n            coll = true;\r\n              this.asteroids[i].velocity.x *= -1.001;\r\n              this.asteroids[i].velocity.y *= -1.001;\r\n\r\n              this.asteroids[a].velocity.x *= -1.001;\r\n              this.asteroids[a].velocity.y *= -1.001;\r\n\r\n              this.asteroids[a].update();\r\n              this.asteroids[i].update();\r\n\r\n          }\r\n        }\r\n      }\r\n      if(!coll)\r\n      {\r\n        this.asteroids[i].update();\r\n      }\r\n\r\n\r\n\r\n      //check for collision between ship and asteroid\r\n      for(var l = 0; l < this.ship.vertices.length -2; l+=2)\r\n      {\r\n        if(this.pointCollision(this.asteroids[i].vertices, this.asteroids[i].x, this.asteroids[i].y, this.ship.vertices[l] + this.ship.x, this.ship.vertices[l+1] + this.ship.y) && this.canBeDamaged)\r\n        {\r\n          this.currentLives--;\r\n          if(this.currentLives > 0)\r\n          {\r\n            var sound = this.sfx_player_explode.cloneNode();\r\n            sound.play();\r\n          }\r\n\r\n          this.ship.x = 500;\r\n          this.ship.y = 500;\r\n          this.ship.velocity.x = 0;\r\n          this.ship.velocity.y = 0;\r\n          this.canBeDamaged = false;\r\n          this.damageTime = this.time;\r\n\r\n          if(this.currentLives <= 0)\r\n          {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      //start checking if a laser hits an asteroid\r\n      for(var j = 0; j < this.lasers.length; j++)\r\n      {\r\n        if(this.pointCollision(this.asteroids[i].vertices, this.asteroids[i].x, this.asteroids[i].y, this.lasers[j].x, this.lasers[j].y))\r\n        {\r\n          this.lasers.splice(j, 1);\r\n          //play sound on impact\r\n          var sound = this.sfx_player_laser_hit.cloneNode();\r\n          sound.play();\r\n          if(this.asteroids[i].splitTimes < 2)\r\n          {\r\n            var xPad = this.asteroids[i].size+10;\r\n            var yPad = this.asteroids[i].size+10;\r\n            var angle = this.asteroids[i].angle;\r\n            for(var k = 0; k < 2; k++)\r\n            {\r\n              //randomly chooses a shape\r\n              var n = Math.round(Math.random() * (this.shapes.Asteroids.length-1));\r\n              //make it fly off in a random direction\r\n              var temp = new Asteroid(this.shapes.Asteroids[n], this.asteroids[i].x + xPad, this.asteroids[i].y + yPad, this.asteroids[i].size/ 2 , angle, (this.asteroids[i].velocity.x * this.asteroids[i].velocity.x + this.asteroids[i].velocity.y * this.asteroids[i].velocity.y ) * .5 + 1);\r\n              this.asteroids.push(temp);\r\n              temp.splitTimes = this.asteroids[i].splitTimes + 1;\r\n              xPad = -xPad;\r\n              yPad = -yPad;\r\n              //make the new asteroids move in opposite directions\r\n              angle = angle - Math.PI;\r\n            }\r\n            this.score += 50;\r\n          }\r\n          else\r\n          {\r\n            this.score += 100;\r\n          }\r\n          this.asteroids.splice(i, 1);\r\n          //we added asteroids, so start over on counting\r\n          i = -1;\r\n          break;\r\n        }\r\n      }\r\n      //end checking if a laser hits an asteroid\r\n\r\n    }\r\n\r\n    //create another level if the current one has no more asteroids\r\n    if(this.asteroids.length === 0)\r\n    {\r\n      this.currentLevel += 1;\r\n      this.makeLevel(this.currentLevel);\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    if(this.currentLives <= 0)\r\n    {\r\n      return;\r\n    }\r\n    this.backBufferContext.fillStyle = '#000';\r\n    this.backBufferContext.fillRect(0, 0, 1000, 1000);\r\n\r\n    var ctx = this.backBufferContext;\r\n\r\n    this.drawText(ctx, this.score, 6, 50, 60);\r\n    this.drawText(ctx, \"LVL\", 6, 50, 130);\r\n    this.drawText(ctx, this.currentLevel, 6, 110, 130);\r\n\r\n    ctx.save();\r\n    //for drawing the lives\r\n    var spotx = 50;\r\n    var spoty = 100;\r\n    ctx.strokeStyle = \"#fff\";\r\n    for(var j = 0; j < this.currentLives; j++)\r\n    {\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.currentLivesVisual[0] + spotx, this.currentLivesVisual[1] + spoty);\r\n      for(var i = 2; i < this.currentLivesVisual.length; i += 2)\r\n      {\r\n        ctx.lineTo(this.currentLivesVisual[i] + spotx, this.currentLivesVisual[i + 1] + spoty);\r\n      }\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      spotx += 20;\r\n    }\r\n    ctx.restore();\r\n\r\n    //end drawing lives\r\n\r\n    //loop through all asteroids and render them\r\n    var length = this.asteroids.length;\r\n    for(var i = 0; i < length; i++)\r\n    {\r\n      this.asteroids[i].render(this.backBufferContext);\r\n    }\r\n    for(var i = 0; i < this.lasers.length; i++)\r\n    {\r\n      this.lasers[i].render(this.backBufferContext);\r\n    }\r\n    this.ship.render(this.backBufferContext);\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas,0,0);\r\n  }\r\n\r\n  drawMenu()\r\n  {\r\n    if(this.flip)\r\n    {\r\n      var message = document.getElementById(\"message\");\r\n      message.innerHTML = \"HOW TO PLAY: <br /> -SHOOT ASTEROIDS TO INCREASE SCORE <br /> -DESTROY ALL ASTEROIDS TO GO TO THE NEXT LEVEL <br /> -WARPING TAKES YOU TO A COMPLETELY RANDOM LOCATION ON SCREEN <br /> -IF YOU DIE, YOU HAVE 3 SECONDS BEFORE YOU CAN BE DAMAGED AGAIN <br /> <br />CONTROLS: <br />-ESC: HIDE HELP <br />-LEFT ARROW KEY: ROTATE COUNTER CLOCKWISE <br />-UP ARROW KEY: MOVE FORWARD <br />-RIGHT ARROW KEY: ROTATE CLOCKWISE <br />-SPACE: FIRE LASER <br />-WARP: ACTIVATE WARP\";\r\n    }\r\n    else\r\n    {\r\n      var message = document.getElementById(\"message\");\r\n      message.innerHTML = \"\";\r\n    }\r\n    this.flip = !this.flip;\r\n  }\r\n\r\n  //takes an a string and draws it\r\n  drawText(ctx, text, scale, drawX, drawY)\r\n  {\r\n\r\n    text = text.toString().toUpperCase();\r\n    var numberBeginning = \"0\".charCodeAt(0);\r\n    var letterBeginning = \"A\".charCodeAt(0);\r\n    var spaceBeginning = \" \".charCodeAt(0);\r\n    //for spacing out our text\r\n    var space = 3 * scale;\r\n    var vertices;\r\n    //focus the text\r\n    drawX += 0.5;\r\n    drawY += 0.5;\r\n    ctx.save();\r\n    ctx.strokeStyle = \"#fff\";\r\n    for(var i = 0; i < text.length; i++)\r\n    {\r\n      var char = text.charCodeAt(i);\r\n      //if there's a space, put it in there for the next draw\r\n      if(char === spaceBeginning)\r\n      {\r\n        drawX += space;\r\n        continue;\r\n      }\r\n      //if it falls in the letter range then print letters, otherwise numbers\r\n      if(char - letterBeginning >= 0)\r\n      {\r\n        vertices = this.shapes.Letters[char - letterBeginning];\r\n      }\r\n      else\r\n      {\r\n        vertices = this.shapes.Numbers[char - numberBeginning];\r\n      }\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo( (vertices[0] * scale) + drawX, (vertices[1] * scale) + drawY);\r\n      for(var j = 2; j < vertices.length; j += 2)\r\n      {\r\n        ctx.lineTo( (vertices[j] * scale) + drawX, (vertices[j + 1] * scale) + drawY);\r\n      }\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n      drawX += space;\r\n    }\r\n    ctx.restore();\r\n  }\r\n\r\n  loop()\r\n  {\r\n   if(this.currentLives <= 0)\r\n   {\r\n     this.gameOver();\r\n   }\r\n   else\r\n   {\r\n     this.update();\r\n     this.render();\r\n   }\r\n  }\r\n\r\n  makeLevel(level)\r\n  {\r\n    var sound = this.sfx_next_level.cloneNode();\r\n    sound.play();\r\n\r\n    this.asteroids = [];\r\n    this.ship = new Ship();\r\n    this.lasers = [];\r\n    level *= 10;\r\n    var flipper = true;\r\n    var initX = 0;\r\n    var initY = 0;\r\n    //create 10 asteroid objects\r\n    for(var i = 0; i < level; i++)\r\n    {\r\n      //randomly chooses a shape\r\n      var n = Math.round(Math.random() * (this.shapes.Asteroids.length-1));\r\n\r\n      //attempt to make asteroids not spawn on top of each other\r\n      if(Math.random() > 0.5)\r\n      {\r\n        initX = Math.random() * this.maxWidth;\r\n        if(flipper)\r\n        {\r\n          initY = Math.random() * 100;\r\n        }\r\n        else {\r\n          initY = Math.random() * (1000-900) + 900;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        initY = Math.random() * this.maxHeight;\r\n        if(flipper)\r\n        {\r\n          initX = Math.random() * 10;\r\n        }\r\n        else {\r\n          initX = Math.random() * (1000-900) + 900;\r\n        }\r\n      }\r\n      flipper = !flipper;\r\n      //make it fly off in a random direction\r\n      var angle = 2*Math.PI*Math.random();\r\n      var speed = 1.5 + Math.round(Math.random() * 1);\r\n      var size = 8+ Math.round(Math.random() * 10)\r\n      var temp = new Asteroid(this.shapes.Asteroids[n], initX, initY, size, angle, speed);\r\n      this.asteroids.push(temp);\r\n    }\r\n  }\r\n\r\n  gameOver()\r\n  {\r\n    if(this.onetime === 0)\r\n    {\r\n      var sound = this.sfx_game_end.cloneNode();\r\n      sound.play();\r\n      this.onetime = 2;\r\n    }\r\n\r\n    this.backBufferContext.fillStyle = '#000';\r\n    this.backBufferContext.fillRect(0, 0, 1000, 1000);\r\n    var ctx = this.backBufferContext;\r\n    this.drawText(ctx, \"GAME OVER\", 20, 250, 500);\r\n    this.drawText(ctx, \"SCORE\", 10, 370, 600);\r\n    this.drawText(ctx, this.score, 10, 560, 600);\r\n\r\n    this.screenBufferContext.drawImage(this.backBufferCanvas,0,0);\r\n  }\r\n}\r\n","import Game from './game';\r\nimport './asteroid.css';\r\n\r\nconst game = new Game();\r\n"],"sourceRoot":""}